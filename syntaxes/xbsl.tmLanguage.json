{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "xbsl",
	"patterns": [
		{ "include": "#comments" },
		{ "include": "#literals" },
		{ "include": "#operators" },
		
		{
			"name": "keyword.control.import.xbsl",
			"match": "^\\s*(импорт|import)\\b([^\\/$]+)",
			"captures": {
				"1": { "name": "keyword.control.xbsl" },
				"2": { "name": "storage.modifier.import.xbsl" }
			}
		},
		{
			"name": "keyword.control.xbsl",
			"begin": "(?i:^\\s*(метод|method)\\s+([\\wа-яё]+\\s*(?:\\()))",
			"beginCaptures": {
				"1": { "name": "keyword.control.xbsl" },
				"2": { "name": "entity.name.function.xbsl" }
			},
			"end": "(?:\\))(?:\\s*(:[^=]+))*?",
			"endCaptures": { "1": { "patterns": [ { "include": "#value-type" } ] } },
			"patterns": [
				{
					"name": "",
					"match": "([\\wа-яё]+)(?:\\s*(?:\\:)\\s*([\\wа-яё\\.\\|<>?]+))*\\s*?",
					"captures": {
						"1": { "name": "variable.parameter.xbsl" },
						"2": { "patterns": [ { "include": "#value-type" } ] }
					}
				}
			]
		},
		{
			"name": "storage.type.var.xbsl",
			"match": "(?<=[^\\wа-яё\\.]|^)(пер|var|знч|val)\\s+(?i:([\\wа-яё]+))\\s*(:[^=]+)*",
			"captures": {
				"1": { "name": "storage.type.var.xbsl" },
				"2": { "name": "variable.xbsl" },
				"3": { "patterns": [ { "include": "#value-type" } ] }
			}
		},
		{
			"name": "entity.name.class",
			"match": "(?i:^\\s*(структура|structure|перечисление|enum)\\s+([\\wа-яё]+\\s*))",
			"captures": {
				"1": { "name": "keyword.control.xbsl" },
				"2": { "name": "entity.name.class.xbsl" }
			}
		},
		{
			"name": "string.other.query.xbsl",
			"begin": "(?i:(?<=[^\\wа-яё\\.])(Запрос|Query)\\s*\\{)",
			"beginCaptures": { "1": { "name": "entity.name.type.xbsl" } },
			"end": "\\}",
			"patterns": [
				{ "include": "#comments" },
				{ "include": "#literals" },
				{ "include": "#interpool" },
				{ "include": "#operators" },				
				{ "include": "#query-keywords" }
			]
		},
		{
			"name": "meta.preprocessor",
			"match": "(?:i@\\s*[\\wа-яё]+)"
		},
		{ "include": "#keywords" }
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.xbsl",
					"match": "\\b(вконце|finally|возврат|return|выбор|case|выбросить|throw|для|for|если|if|знч|val|и|and|из|in|или|or|импорт|import|иначе|else|исключение|exception|исп|use|как|as|когда|when|конст|const|конструктор|constructor|метод|method|не|not|неизвестно|unknown|новый|new|обз|req|область|scope|пер|var|перечисление|enum|по|to|поймать|catch|пока|while|попытка|try|прервать|break|продолжить|continue|статический|static|структура|structure|умолчание|default|это|is|этот|this)\\b"
				}
			]
		},
		"query-keywords": {
			"patterns": [
				{
					"name": "keyword.control.less.xbsl",
					"match": "(?i:\\b(ВЫБРАТЬ|SELECT|ИЗ|FROM|ГДЕ|WHERE|УПОРЯДОЧИТЬ ПО|ORDER BY|ПОМЕСТИТЬ|INTO|ИНДЕКСИРОВАТЬ ПО|INDEX BY|КАК|AS|И|AND|ИЛИ|OR|НЕ|NOT)\\b)"
				}
			]
		},
		"operators": {
			"patterns": [
				{
					"name": "keyword.operator.lambda.xbsl",
					"match": "->"
				},
				{
					"name": "keyword.operator.expression.xbsl",
					"match": "<=|>=|=|<|>|==|!=|\\*|\\+|-|/|%|\\*\\*"
				},
				{
					"name": "keyword.operator.logical.xbsl",
					"match": "(?<=[^\\wа-яё\\.]|^)(не|not|и|and|или|or)(?=[^\\wа-яё\\.]|$)"
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"name": "comment.line.double-slash.xbsl",
					"begin": "//",
					"end": "$"
				},
				{
					"name": "comment.block.xbsl",
					"begin": "\/\\*",
					"end": "\\*\/"
				}
			]
		},
		"literals": {
			"patterns": [
				{
					"name": "constant.numeric.xbsl",
					"match": "(?<=[^\\wа-яё\\.]|^)((\\d+\\.?\\d*)|(0x[0-9a-f]+)|(0b[0-1]+))(?=[^\\wа-яё\\.]|$)"
				},
				{
					"name": "string.quoted.double.xbsl",
					"begin": "\"",
					"end": "\"",
					"patterns": [
						{ "include": "#interpool" },
						{
							"name": "constant.character.escape.xbsl",
							"match": "\\\\."
						}
					]
				},
				{
					"name": "constant.language.xbsl",
					"match": "(?i:(\\b(true|истина|false|ложь)\\b))"
				},
				{
					"include": "#built-in-type"
				}
			]
		},
		"built-in-type":{
			"patterns": [
				{
					"name": "storage.type.xbsl",
					"match": "(?i:(\\b[\\wа-яё]+\\b)\\{(.*?)\\})",
					"captures": {
						"2": { "name": "support.type.xbsl" },
						"3": { "name": "variable.other.constant.xbsl" }
					}
				}
			]
		},
		"value-type": {
			"patterns": [
				{
					"name": "entity.name.type.xbsl",
					"match": "(([\\wа-яё\\.?]+))+"
				},
				{
					"name": "punctuation.type.diamond.xbsl",
					"match": "(<|>)"
				},
				{
					"name": "punctuation.type.complex.xbsl",
					"match": "\\|"
				}
			]
		},
		"interpool": {
			"patterns": [
				{
					"name": "variable.parameter.xbsl",
					"begin": "[\\%\\$]\\{",
					"end": "\\}",
					"patterns": [ { "include": "#operators" } ]
				},
				{
					"name": "variable.parameter.xbsl",
					"match": "[\\%\\$][\\wа-яё]+\\b"
				}
			]
		}
	},
	"scopeName": "source.xbsl"
}