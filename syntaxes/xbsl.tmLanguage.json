{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "xbsl",
	"patterns": [
		{ "include": "#comments" },
		{ "include": "#query-full" },
		{ "include": "#literals" },
		{ "include": "#operators" },
		{
			"name": "keyword.control.import.xbsl",
			"match": "^\\s*(импорт|import)\\b([^\\/$]+)",
			"captures": {
				"1": { "name": "keyword.control.xbsl" },
				"2": { "name": "storage.modifier.import.xbsl" }
			}
		},
		{
			"name": "keyword.operator.expression.xbsl",
			"match": "\\s*(метод|method)\\s+(?i:([\\wа-яё]+)\\s*(?:\\()(.*)(?:\\))(?:\\s*:(.*[^\\/$]))?)",
			"captures": {
				"1": { "name": "keyword.control.xbsl" },
				"2": { "name": "entity.name.function.xbsl" },
				"3": { "patterns": [ { "include": "#method-params" } ] },
				"4": { "name": "entity.name.type.xbsl" }
			}
		},
		{
			"name": "keyword.operator.expression.xbsl",
			"begin": "(?i:\\s*(метод|method)\\s+([\\wа-яё]+\\s*(?:\\()))",
			"beginCaptures": {
				"1": { "name": "keyword.control.xbsl" },
				"2": { "name": "entity.name.function.xbsl" }
			},
			"end": "(?<=\\))(?:\\s*:(.*[^\\/$]))*",
			"endCaptures": { "1": { "name": "entity.name.type.xbsl" } },
			"patterns": [ { "include": "#method-params" } ]
		},
		{
			"name": "storage.type.var.xbsl",
			"match": "(?<=[^\\wа-яё\\.]|^)(пер|var|знч|val)\\s+(?i:([\\wа-яё]+))\\s*(:[^=]+)*",
			"captures": {
				"1": { "name": "storage.type.var.xbsl" },
				"2": { "name": "variable.xbsl" },
				"3": { "patterns": [ { "include": "#value-type" } ] }
			}
		},
		{
			"name": "entity.name.class",
			"match": "(?i:^\\s*(структура|structure|перечисление|enum)\\s+([\\wа-яё]+\\s*))",
			"captures": {
				"1": { "name": "keyword.control.xbsl" },
				"2": { "name": "entity.name.class.xbsl" }
			}
		},
		{
			"name": "string.other.query.xbsl",
			"begin": "(?i:(?<=[^\\wа-яё\\.])(Запрос|Query)\\s*\\{)",
			"beginCaptures": { "1": { "name": "entity.name.type.xbsl" } },
			"end": "\\}",
			"patterns": [
				{ "include": "#comments" },
				{ "include": "#literals" },
				{ "include": "#interpool" },
				{ "include": "#operators" },
				{ "include": "#query-keywords" }
			]
		},
		{
			"name": "meta.preprocessor",
			"match": "(?i:@\\s*[\\wа-яё]+)"
		},
		{ "include": "#keywords" }
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.xbsl",
					"match": "\\b(вконце|finally|возврат|return|выбор|case|выбросить|throw|для|for|если|if|знч|val|и|and|из|in|или|or|импорт|import|иначе|else|исключение|exception|исп|use|как|as|когда|when|конст|const|конструктор|constructor|метод|method|не|not|неизвестно|unknown|новый|new|обз|req|область|scope|пер|var|перечисление|enum|по|to|поймать|catch|пока|while|попытка|try|прервать|break|продолжить|continue|статический|static|структура|structure|умолчание|default|это|is|этот|this)\\b"
				}
			]
		},
		"operators": {
			"patterns": [
				{
					"name": "keyword.control.xbsl",
					"match": "->"
				},
				{
					"name": "keyword.operator.expression.xbsl",
					"match": "<=|>=|=|<|>|==|!=|\\*|\\+|-|/|%|\\*\\*\\:\\?"
				},
				{
					"name": "keyword.control.xbsl",
					"match": "(?<=[^\\wа-яё\\.]|^)(не|not|и|and|или|or)(?=[^\\wа-яё\\.]|$)"
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"name": "comment.line.double-slash.xbsl",
					"begin": "//",
					"end": "$"
				},
				{
					"name": "comment.block.xbsl",
					"begin": "\/\\*",
					"end": "\\*\/"
				}
			]
		},
		"literals": {
			"patterns": [
				{
					"name": "constant.numeric.xbsl",
					"match": "(?<=[^\\wа-яё\\.]|^)((\\d+\\.?\\d*)|(0x[0-9a-f]+)|(0b[0-1]+))(?=[^\\wа-яё\\.]|$)"
				},
				{
					"name": "string.quoted.double.xbsl",
					"begin": "\"",
					"end": "\"",
					"patterns": [
						{ "include": "#interpool" },
						{
							"name": "constant.character.escape.xbsl",
							"match": "\\\\."
						}
					]
				},
				{
					"name": "constant.language.xbsl",
					"match": "(\\b(Истина|True|Ложь|False|Неопределено|Undefined)\\b)"
				},
				{ "include": "#built-in-type" }
			]
		},
		"built-in-type": {
			"patterns": [
				{
					"name": "storage.type.xbsl",
					"match": "(?i:(\\b[\\wа-яё]+\\b)\\{(.*?)\\})",
					"captures": {
						"2": { "name": "support.type.xbsl" },
						"3": { "name": "variable.other.constant.xbsl" }
					}
				}
			]
		},
		"value-type": {
			"patterns": [
				{
					"comment": "Имя типа, первая часть",
					"begin": "(?<=\\:)\\s*(?:([\\wа-яё\\.\\?]+)\\s*((?>\\<)))",
					"beginCaptures": {
						"1": { "name": "entity.name.type.xbsl" },
						"2": { "name": "keyword.other.operator.xbsl" }
					},
					"end": ">(?:\\?)?",
					"endCaptures": { "0": { "name": "keyword.other.operator.xbsl" } },
					"patterns": [
						{
							"comment": "содержимое, надо вынести наверное",
							"name": "entity.name.type.xbsl",
							"begin": "\\b([\\wа-яё\\.\\?]+\\s*)",
							"end": ">|<|\\|",
							"patterns": [ { "include": "#operators" } ]
						}
					]
				},
				{
					"comment": "Имя типа брильянта, включая составное",
					"match": "(?:(?<=\\||(?<=\\:))\\s*([\\wа-яё\\.\\?]+))+",
					"captures": { "1": { "name": "entity.name.type.xbsl" } }
				}
			]
		},
		"interpool": {
			"patterns": [
				{
					"name": "variable.parameter.xbsl",
					"begin": "[\\%\\$]\\{",
					"end": "\\}",
					"patterns": [ { "include": "#operators" } ]
				},
				{
					"name": "variable.parameter.xbsl",
					"match": "[\\%\\$][\\wа-яё]+\\b"
				}
			]
		},
		"query-keywords": {
			"comment": "Ключевые слова запроса",
			"patterns": [
				{
					"name": "keyword.sql.xbsl",
					"match": "(?i:\\b(ВЫБРАТЬ|SELECT|ВСТАВИТЬ|INSERT|ИЗМЕНИТЬ|UPDATE|РАЗРЕШЕННЫЕ|ALLOWED|ПЕРВЫЕ|TOP|РАЗЛИЧНЫЕ|DISTINCT)\\b)"
				},
				{
					"name": "keyword.sql.xbsl",
					"match": "(?i:\\b(ОБРЕЗАТЬ|TRUNCATE|УДАЛИТЬ|DELETE|УНИЧТОЖИТЬ|DROP|ПОМЕСТИТЬ|INTO|ИНДЕКСИРОВАТЬ|INDEX|УСТАНОВИТЬ|SET)\\b)"
				},
				{
					"name": "keyword.sql.xbsl",
					"match": "(?i:\\b(СОЗДАТЬ\\s+ВРЕМЕННУЮ\\s+ТАБЛИЦУ|CREATE\\s+TEMPORARY\\s+TABLE|СОЗДАТЬ\\s+ИНДЕКС|CREATE\\s+INDEX)\\b)"
				},
				{
					"name": "keyword.sql.xbsl",
					"match": "(?i:\\b(ИЗ|FROM|ГДЕ|WHERE|СОЕДИНЕНИЕ|JOIN|ЛЕВОЕ|LEFT|ПРАВОЕ|RIGHT|ПОЛНОЕ|FULL|ВНУТРЕННЕЕ|INNER)\\b)"
				},
				{
					"name": "keyword.sql.xbsl",
					"match": "(?i:\\b(ОБЪЕДИНИТЬ|UNION|ВСЕ|ALL|УПОРЯДОЧИТЬ|ORDER|СГРУППИРОВАТЬ|GROUP|ИМЕЮЩИЕ|HAVING|ИЕРАРХИИ|HIERARCHY)\\b)"
				},
				{
					"name": "keyword.sql.xbsl",
					"match": "(?i:\\b(ПО|ON|BY|ВОЗР|ASC|УБЫВ|DESC|ДЛЯ|FOR|КАК|AS|ЕСТЬ|IS|В|IN|ВЫРАЗИТЬ|CAST)\\b)"
				},
				{
					"name": "keyword.sql.xbsl",
					"match": "(?i:\\b(ВЫБОР|CASE|КОГДА|WHEN|ТОГДА|THEN|ИНАЧЕ|ELSE|КОНЕЦ|END)\\b)"
				},
				{
					"name": "keyword.sql.xbsl",
					"match": "(?i:\\b(НЕ|NOT|ИЛИ|OR|И|AND|ССЫЛКА|REFS|СПЕЦСИМВОЛ|ESCAPE|NULL|ПОДОБНО|LIKE|МЕЖДУ|BETWEEN)\\b)"
				}
			]
		},
		"query-func": {
			"comment": "Функции запроса",
			"patterns": [
				{
					"name": "string.query.xbsl",
					"begin": "(?i:\\b([\\wа-яё]+)\\b(\\())",
					"beginCaptures": {
						"1": { "name": "support.function.sql.xbsl" },
						"2": { "name": "entity.name.function.xbsl" }
					},
					"end": "\\)",
					"endCaptures": { "0": { "name": "entity.name.function.xbsl" } },
					"patterns": [
						{ "include": "#comments" },
						{ "include": "#literals" },
						{ "include": "#interpool" },
						{ "include": "#operators" },
						{ "include": "#query-func" },
						{ "include": "#query-keywords" }
					]
				}
			]
		},
		"query-full": {
			"comment": "Блок запроса",
			"patterns": [
				{
					"comment": "Первый вариант написания запроса {}",
					"name": "string.query.xbsl",
					"begin": "(?i:\\b(Запрос|Query)\\s*(\\{))",
					"beginCaptures": {
						"1": { "name": "entity.name.type.xbsl" },
						"2": { "name": "entity.name.function.xbsl" }
					},
					"end": "\\}",
					"endCaptures": { "0": { "name": "entity.name.function.xbsl" } },
					"patterns": [
						{ "include": "#comments" },
						{ "include": "#literals" },
						{ "include": "#interpool" },
						{ "include": "#operators" },
						{ "include": "#query-func" },
						{ "include": "#query-keywords" }
					]
				},
				{
					"comment": "Второй вариант написания запроса новый Запрос()",
					"name": "string.query.xbsl",
					"begin": "(?i:\\b(новый|new)\\s+(Запрос|Query)\\s*(\\())",
					"beginCaptures": {
						"1": { "name": "keyword.control.xbsl" },
						"2": { "name": "entity.name.type.xbsl" },
						"3": { "name": "entity.name.function.xbsl" }
					},
					"end": "\\)",
					"endCaptures": { "0": { "name": "entity.name.function.xbsl" } },
					"patterns": [
						{
							"comment": "Текст запроса строкой",
							"begin": "\"",
							"beginCaptures": { "0": { "name": "punctuation.definition.string.begin.bsl" } },
							"end": "\"",
							"endCaptures": { "0": { "name": "punctuation.definition.string.end.bsl" } },
							"patterns": [
								{ "include": "#comments" },
								{ "include": "#literals" },
								{ "include": "#interpool" },
								{ "include": "#operators" },
								{ "include": "#query-func" },
								{ "include": "#query-keywords" }
							]
						}
					]
				}
			]
		},
		"method-params": {
			"begin": "\\s*([\\wа-яё]+)",
			"beginCaptures": { "1": { "name": "variable.parameter.xbsl" } },
			"end": "(?=[,\\)])",
			"patterns": [
				{
					"begin": "(?<=\\:)([^,\\=$]+)",
					"beginCaptures": { "1": { "name": "entity.name.type.xbsl" } },
					"end": "(?=[,\\=$])"
				},
				{ "include": "#literals" }
			]
		},
		"variable": {
			"comment": "Определенние переменной или параметра",
			"begin": "(?i:([\\wа-яё]+))\\b",
			"beginCaptures": { "1": { "name": "variable.parameter.method.xbsl" } },
			"end": "(?:(?=\\,|\\=|\\)|$))",
			"patterns": [
				{ "include": "#operators" },
				{ "include": "#value-type" }
			]
		}
	},
	"scopeName": "source.xbsl"
}